name: Build and Deploy

on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    environment: pre-prod
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install Dependencies
        run: npm install
      - name: Build Application
        run: npm run build
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.2
        with:
          branch: gh-pages
          folder: build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push-image:
    needs: build
    runs-on: ubuntu-latest
    environment: pre-prod
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            salras/my-image:latest
            salras/my-image:${{ github.sha }}
      - name: Push Docker Image to Docker Hub
        run: docker push salras/my-image
  read-dev:
    permissions:
      id-token: write # need this for OIDC
      contents: read
    runs-on: ubuntu-latest
    environment: pre-prod

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.EC2_ROLE }}
          aws-region: us-east-1
          role-duration-seconds: 12000

      - run: aws ssm send-command --document-name "AWS-RunShellScript" --document-version "1" --targets '[{"Key":"InstanceIds","Values":["i-0e1e938e34e31d717"]}]' --parameters '{"commands":["#! /bin/bash","docker stop react-app","docker rm react-app","","docker rmi salras/my-image:latest","docker pull salras/my-image:latest","","docker run -t -d -p 80:80 --name react-app salras/my-image:latest"],"workingDirectory":["/home/ubuntu"],"executionTimeout":["3600"]}' --timeout-seconds 600 --max-concurrency "50" --max-errors "0" --region us-east-1

 




